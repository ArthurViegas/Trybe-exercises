{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/SpendingsForm.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCurrencies, saveExpense, sumExpensies } from '../actions';\nimport requestCurrency from '../helpers/requestAPI';\nimport { categories, paymentMethod } from '../helpers/payment';\n\nclass SpendigForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n      currNames: [],\n      totalSpendings: 0\n    };\n    this.handleInputChanges = this.handleInputChanges.bind(this);\n    this.setCurrNames = this.setCurrNames.bind(this);\n    this.sumValues = this.sumValues.bind(this);\n  }\n\n  async componentDidMount() {\n    const allCurrencies = await requestCurrency();\n    this.setCurrNames(allCurrencies);\n  }\n\n  setCurrNames(moedas) {\n    const currenciesName = Object.keys(moedas).filter(currencyFilter => currencyFilter !== 'USDT');\n    this.setState({\n      currNames: currenciesName\n    });\n  }\n\n  sumValues() {\n    const {\n      totalExpenses,\n      sumExpensies: allExpensies\n    } = this.props;\n    const convertedValues = this.convertValues(totalExpenses);\n    const sum = convertedValues.reduce((prev, curr) => prev + curr);\n    this.setState({\n      totalSpendings: sum,\n      value: ''\n    });\n    allExpensies(sum);\n  }\n\n  convertValues(expenses) {\n    const exchangedCurr = expenses.map(expense => {\n      const {\n        exchangeRates,\n        value\n      } = expense;\n      const thisCurr = expense.currency;\n      const exchangeCurr = exchangeRates.find(curr => curr.code === thisCurr);\n      const {\n        ask\n      } = exchangeCurr;\n      const converted = value * ask;\n      return converted;\n    });\n    return exchangedCurr;\n  } ///                                                             ///\n\n\n  handleInputChanges({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  spendigInput() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      name: \"value\",\n      value: value,\n      onChange: this.handleInputChanges,\n      type: \"number\",\n      placeholder: \"R$: Valor gasto.\",\n      \"data-testid\": \"value-input\",\n      id: \"value-input\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  currencyInput() {\n    const {\n      currNames\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      onChange: this.handleInputChanges,\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, currNames.map(currencyName => /*#__PURE__*/React.createElement(\"option\", {\n      key: currencyName,\n      \"data-testid\": currencyName,\n      value: currencyName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, currencyName))));\n  }\n\n  paymentInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"payment-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, \"Metodo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"payment-input\",\n      onChange: this.handleInputChanges,\n      name: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, paymentMethod.map(payment => /*#__PURE__*/React.createElement(\"option\", {\n      key: payment,\n      \"data-testid\": payment,\n      value: payment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, payment))));\n  }\n\n  tagInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }\n    }, \"Tag:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag-input\",\n      onChange: this.handleInputChanges,\n      name: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, categories.map(categorie => /*#__PURE__*/React.createElement(\"option\", {\n      key: categorie,\n      \"data-testid\": categorie,\n      value: categorie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, categorie))));\n  }\n\n  descriptionInput() {\n    const {\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Mercado, roupa, farm...\",\n      \"data-testid\": \"description-input\",\n      id: \"value-input\",\n      name: \"description\",\n      value: description,\n      onChange: this.handleInputChanges,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  async handleSubmit() {\n    const {\n      id,\n      value,\n      currency,\n      method,\n      tag,\n      description\n    } = this.state;\n    const {\n      addExpenses\n    } = this.props;\n    const currRequest = await requestCurrency(); // console.log(currRequest);\n    // const currenciesObj = Object.values(currRequest)\n    //   .filter((currencyFilter) => currencyFilter.codein !== 'BRLT');\n\n    const newRegister = {\n      id,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates: currRequest\n    };\n    addExpenses(newRegister);\n    this.setState(previousId => ({\n      id: previousId.id + 1\n    }));\n    this.sumValues();\n  }\n\n  render() {\n    const {\n      exchangeRates,\n      totalSpendings\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => {\n        event.preventDefault();\n        this.handleSubmit(exchangeRates, totalSpendings);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }, this.spendigInput(), this.currencyInput(), this.paymentInput(), this.tagInput(), this.descriptionInput(), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, \"Adicionar despesa\")));\n  }\n\n}\n\nSpendigForm.propTypes = {\n  addExpenses: PropTypes.func.isRequired,\n  totalExpenses: PropTypes.func.isRequired,\n  sumExpensies: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  totalExpenses: state.wallet.expenses,\n  currencies: state.wallet.exchangeRates\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addExpenses: state => dispatch(saveExpense(state)),\n  loadCurrencie: state => dispatch(loadCurrencies(state)),\n  sumExpensies: state => dispatch(sumExpensies(state))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpendigForm);","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/SpendingsForm.js"],"names":["React","PropTypes","connect","loadCurrencies","saveExpense","sumExpensies","requestCurrency","categories","paymentMethod","SpendigForm","Component","constructor","state","id","value","description","currency","method","tag","exchangeRates","currNames","totalSpendings","handleInputChanges","bind","setCurrNames","sumValues","componentDidMount","allCurrencies","moedas","currenciesName","Object","keys","filter","currencyFilter","setState","totalExpenses","allExpensies","props","convertedValues","convertValues","sum","reduce","prev","curr","expenses","exchangedCurr","map","expense","thisCurr","exchangeCurr","find","code","ask","converted","target","name","spendigInput","currencyInput","currencyName","paymentInput","payment","tagInput","categorie","descriptionInput","handleSubmit","addExpenses","currRequest","newRegister","previousId","render","event","preventDefault","propTypes","func","isRequired","mapStateToProps","wallet","currencies","mapDispatchToProps","dispatch","loadCurrencie"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loadCurrencies, saveExpense, sumExpensies } from '../actions';\nimport requestCurrency from '../helpers/requestAPI';\nimport { categories, paymentMethod } from '../helpers/payment';\n\nclass SpendigForm extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n      currNames: [],\n      totalSpendings: 0,\n    };\n    this.handleInputChanges = this.handleInputChanges.bind(this);\n    this.setCurrNames = this.setCurrNames.bind(this);\n    this.sumValues = this.sumValues.bind(this);\n  }\n\n  async componentDidMount() {\n    const allCurrencies = await requestCurrency();\n    this.setCurrNames(allCurrencies);\n  }\n\n  setCurrNames(moedas) {\n    const currenciesName = Object.keys(moedas)\n      .filter((currencyFilter) => currencyFilter !== 'USDT');\n\n    this.setState({ currNames: currenciesName });\n  }\n\n  sumValues() {\n    const { totalExpenses, sumExpensies: allExpensies } = this.props;\n    const convertedValues = this.convertValues(totalExpenses);\n    const sum = convertedValues.reduce((prev, curr) => prev + curr);\n\n    this.setState({\n      totalSpendings: sum,\n      value: '',\n    });\n    allExpensies(sum);\n  }\n\n  convertValues(expenses) {\n    const exchangedCurr = expenses.map((expense) => {\n      const { exchangeRates, value } = expense;\n      const thisCurr = expense.currency;\n      const exchangeCurr = exchangeRates.find((curr) => curr.code === thisCurr);\n      const { ask } = exchangeCurr;\n      const converted = value * ask;\n      return converted;\n    });\n    return exchangedCurr;\n  }\n\n  ///                                                             ///\n\n  handleInputChanges({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  spendigInput() {\n    const { value } = this.state;\n    return (\n      <label htmlFor=\"value-input\">\n        Valor:\n        <input\n          name=\"value\"\n          value={ value }\n          onChange={ this.handleInputChanges }\n          type=\"number\"\n          placeholder=\"R$: Valor gasto.\"\n          data-testid=\"value-input\"\n          id=\"value-input\"\n          required\n        />\n      </label>\n    );\n  }\n\n  currencyInput() {\n    const { currNames } = this.state;\n    return (\n      <label htmlFor=\"currency-input\">\n        Moeda:\n        <select\n          data-testid=\"currency-input\"\n          id=\"currency-input\"\n          onChange={ this.handleInputChanges }\n          name=\"currency\"\n        >\n          {currNames.map((currencyName) => (\n            <option\n              key={ currencyName }\n              data-testid={ currencyName }\n              value={ currencyName }\n            >\n              {currencyName}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n\n  paymentInput() {\n    return (\n      <label htmlFor=\"payment-input\">\n        Metodo de pagamento:\n        <select\n          data-testid=\"method-input\"\n          id=\"payment-input\"\n          onChange={ this.handleInputChanges }\n          name=\"method\"\n        >\n          {paymentMethod.map((payment) => (\n            <option\n              key={ payment }\n              data-testid={ payment }\n              value={ payment }\n            >\n              {payment}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n\n  tagInput() {\n    return (\n      <label htmlFor=\"tag-input\">\n        Tag:\n        <select\n          data-testid=\"tag-input\"\n          id=\"tag-input\"\n          onChange={ this.handleInputChanges }\n          name=\"tag\"\n        >\n          {categories.map((categorie) => (\n            <option\n              key={ categorie }\n              data-testid={ categorie }\n              value={ categorie }\n            >\n              {categorie}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n\n  descriptionInput() {\n    const { description } = this.state;\n    return (\n      <label htmlFor=\"description-input\">\n        Descrição:\n        <input\n          type=\"text\"\n          placeholder=\"Mercado, roupa, farm...\"\n          data-testid=\"description-input\"\n          id=\"value-input\"\n          name=\"description\"\n          value={ description }\n          onChange={ this.handleInputChanges }\n        />\n      </label>\n    );\n  }\n\n  async handleSubmit() {\n    const { id, value, currency, method, tag, description } = this.state;\n    const { addExpenses } = this.props;\n    const currRequest = await requestCurrency();\n    // console.log(currRequest);\n    // const currenciesObj = Object.values(currRequest)\n    //   .filter((currencyFilter) => currencyFilter.codein !== 'BRLT');\n\n    const newRegister = {\n      id,\n      value,\n      currency,\n      method,\n      tag,\n      description,\n      exchangeRates: currRequest,\n    };\n    addExpenses(newRegister);\n    this.setState((previousId) => ({ id: previousId.id + 1 }));\n\n    this.sumValues();\n  }\n\n  render() {\n    const { exchangeRates, totalSpendings } = this.state;\n    return (\n      <section>\n        <form\n          onSubmit={ (event) => {\n            event.preventDefault();\n            this.handleSubmit(exchangeRates, totalSpendings);\n          } }\n        >\n          { this.spendigInput() }\n          { this.currencyInput() }\n          { this.paymentInput() }\n          { this.tagInput() }\n          { this.descriptionInput() }\n          <button type=\"submit\">\n            Adicionar despesa\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nSpendigForm.propTypes = {\n  addExpenses: PropTypes.func.isRequired,\n  totalExpenses: PropTypes.func.isRequired,\n  sumExpensies: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  totalExpenses: state.wallet.expenses,\n  currencies: state.wallet.exchangeRates,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addExpenses: (state) => dispatch(saveExpense(state)),\n  loadCurrencie: (state) => dispatch(loadCurrencies(state)),\n  sumExpensies: (state) => dispatch(sumExpensies(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SpendigForm);\n"]},"metadata":{},"sourceType":"module"}