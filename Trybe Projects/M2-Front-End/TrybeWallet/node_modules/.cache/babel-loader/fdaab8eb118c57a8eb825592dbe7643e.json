{"ast":null,"code":"import { ADD_TOTAL_EXPENSES, LOAD_CURRENCIES, SAVE_NEW_EXPENSE } from '../actions'; // Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  expenses: [],\n  exchangeName: [],\n  totalExpenses: 0\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SAVE_NEW_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case LOAD_CURRENCIES:\n      return { ...state,\n        exchangeRates: action.payload\n      };\n\n    case ADD_TOTAL_EXPENSES:\n      return { ...state,\n        expensesSum: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/reducers/wallet.js"],"names":["ADD_TOTAL_EXPENSES","LOAD_CURRENCIES","SAVE_NEW_EXPENSE","INITIAL_STATE","expenses","exchangeName","totalExpenses","walletReducer","state","action","type","payload","exchangeRates","expensesSum"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,eAA7B,EAA8CC,gBAA9C,QAAsE,YAAtE,C,CACA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,YAAY,EAAE,EAFM;AAGpBC,EAAAA,aAAa,EAAE;AAHK,CAAtB;;AAMA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGL,aAAT,EAAwBM,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,gBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,QAAQ,EAAE,CAAC,GAAGI,KAAK,CAACJ,QAAV,EAAoBK,MAAM,CAACE,OAA3B;AAFL,OAAP;;AAIF,SAAKV,eAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELI,QAAAA,aAAa,EAAEH,MAAM,CAACE;AAFjB,OAAP;;AAIF,SAAKX,kBAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELK,QAAAA,WAAW,EAAEJ,MAAM,CAACE;AAFf,OAAP;;AAIF;AACE,aAAOH,KAAP;AAjBF;AAmBD,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import { ADD_TOTAL_EXPENSES, LOAD_CURRENCIES, SAVE_NEW_EXPENSE } from '../actions';\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  expenses: [],\n  exchangeName: [],\n  totalExpenses: 0,\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_NEW_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case LOAD_CURRENCIES:\n    return {\n      ...state,\n      exchangeRates: action.payload,\n    };\n  case ADD_TOTAL_EXPENSES:\n    return {\n      ...state,\n      expensesSum: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}