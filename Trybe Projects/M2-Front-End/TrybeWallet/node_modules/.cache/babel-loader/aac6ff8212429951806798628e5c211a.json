{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/SpendingsTable.js\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport TableHeader from './TableHeader';\n\nclass SpendigsTable extends React.Component {\n  formatMonetaryValue(strOrNumber) {\n    return `${Number(strOrNumber).toFixed(2)}`;\n  }\n\n  convertToBRL(exchangeRates, currency, value) {\n    const currenciesObj = Object.values(exchangeRates);\n    const findExchangeRate = currenciesObj.find(find => find.code === currency);\n    return findExchangeRate.ask * value;\n  }\n\n  findCurrency(exchangeRates, currency) {\n    const currenciesObj = Object.values(exchangeRates);\n    const findExchangeRate = currenciesObj.find(find => find.code === currency);\n    const exchangeRate = this.formatMonetaryValue(findExchangeRate.ask);\n    return exchangeRate;\n  }\n\n  teste(currency, exchangeRates) {\n    const currName = exchangeRates[currency].name;\n    console.log(currName.split('/')[0]);\n  }\n\n  rederExpenseRow(expense) {\n    const {\n      id,\n      description,\n      tag,\n      method,\n      value,\n      currency,\n      exchangeRates\n    } = expense;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, this.teste(currency, exchangeRates)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, this.findCurrency(exchangeRates, currency)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, this.formatMonetaryValue(this.convertToBRL(exchangeRates, currency, value))));\n  }\n\n  render() {\n    const {\n      expenses\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, expenses.map(expense => this.rederExpenseRow(expense))));\n  }\n\n} // SpendigsTable.propTypes = {\n//   userEmail: PropTypes.string.isRequired,\n//   totalExpenses: PropTypes.func.isRequired,\n// };\n\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nexport default connect(mapStateToProps, null)(SpendigsTable);","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/SpendingsTable.js"],"names":["React","connect","TableHeader","SpendigsTable","Component","formatMonetaryValue","strOrNumber","Number","toFixed","convertToBRL","exchangeRates","currency","value","currenciesObj","Object","values","findExchangeRate","find","code","ask","findCurrency","exchangeRate","teste","currName","name","console","log","split","rederExpenseRow","expense","id","description","tag","method","render","expenses","props","map","mapStateToProps","state","wallet"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TableHeader from './TableHeader';\n\nclass SpendigsTable extends React.Component {\n  formatMonetaryValue(strOrNumber) {\n    return `${Number(strOrNumber).toFixed(2)}`;\n  }\n\n  convertToBRL(exchangeRates, currency, value) {\n    const currenciesObj = Object.values(exchangeRates);\n    const findExchangeRate = currenciesObj.find((find) => find.code === currency);\n\n    return (findExchangeRate.ask * value);\n  }\n\n  findCurrency(exchangeRates, currency) {\n    const currenciesObj = Object.values(exchangeRates);\n    const findExchangeRate = currenciesObj.find((find) => find.code === currency);\n    const exchangeRate = this.formatMonetaryValue(findExchangeRate.ask);\n\n    return exchangeRate;\n  }\n\n  teste(currency, exchangeRates) {\n    const currName = exchangeRates[currency].name;\n    console.log(currName.split('/')[0]);\n  }\n\n  rederExpenseRow(expense) {\n    const { id, description, tag, method, value, currency, exchangeRates } = expense;\n    return (\n      <tr key={ id }>\n        <td>{ description }</td>\n        <td>{ tag }</td>\n        <td>{ method }</td>\n        <td>{ value }</td>\n        <td>{ this.teste(currency, exchangeRates) }</td>\n        <td>{ this.findCurrency(exchangeRates, currency) }</td>\n        <td>\n          { this.formatMonetaryValue(\n            this.convertToBRL(exchangeRates, currency, value),\n          ) }\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <table>\n        <TableHeader />\n        <tbody>\n          { expenses.map((expense) => this.rederExpenseRow(expense)) }\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// SpendigsTable.propTypes = {\n//   userEmail: PropTypes.string.isRequired,\n//   totalExpenses: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps, null)(SpendigsTable);\n"]},"metadata":{},"sourceType":"module"}