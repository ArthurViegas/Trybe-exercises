{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/Header.js\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../assets/css/header.css';\n\nclass Header extends React.Component {\n  componentDidUpdate() {\n    this.teste();\n  }\n\n  findExchangeCurrency(currency) {\n    const {\n      currencies\n    } = this.props;\n    const exchangeCurrency = currencies.find(coin => coin.code === currency);\n    return exchangeCurrency;\n  }\n\n  exchangeToReal(exchangeCurrency, spendigs) {\n    // console.log(exchangeCurrency, spendigs);\n    const {\n      ask = {\n        exchangeIndex\n      }\n    } = exchangeCurrency;\n    console.log(exchangeIndex); // const conversion = spendigs \n  }\n\n  async teste() {\n    const {\n      totalExpenses,\n      currencies\n    } = this.props; // console.log(totalExpenses);\n    // const exchangeCurrency = this.findExchangeCurrency()\n\n    if (totalExpenses.length !== 0) {\n      totalExpenses.map(async expense => {\n        const {\n          currency,\n          spendigs\n        } = expense;\n        const exchangeCurrency = await this.findExchangeCurrency(currency);\n        this.exchangeToReal(exchangeCurrency, spendigs); // console.log(expense);\n      });\n    }\n  }\n\n  render() {\n    const {\n      userEmail\n    } = this.props;\n    const total = 0;\n    const currency = 'BRL';\n    return /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, \" TrybeWallet \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      className: \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, `Email: ${userEmail}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spending-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, `Despesas: ${total}`), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, currency))));\n  }\n\n}\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  totalExpenses: state.wallet.expenses,\n  currencies: state.wallet.allCurr\n});\n\nexport default connect(mapStateToProps, null)(Header);","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/Header.js"],"names":["React","PropTypes","connect","Header","Component","componentDidUpdate","teste","findExchangeCurrency","currency","currencies","props","exchangeCurrency","find","coin","code","exchangeToReal","spendigs","ask","exchangeIndex","console","log","totalExpenses","length","map","expense","render","userEmail","total","propTypes","string","isRequired","mapStateToProps","state","user","email","wallet","expenses","allCurr"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,0BAAP;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,KAAL;AACD;;AAEDC,EAAAA,oBAAoB,CAACC,QAAD,EAAW;AAC7B,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKC,KAA5B;AACA,UAAMC,gBAAgB,GAAGF,UAAU,CAACG,IAAX,CAAiBC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcN,QAAxC,CAAzB;AACA,WAAOG,gBAAP;AACD;;AAEDI,EAAAA,cAAc,CAACJ,gBAAD,EAAmBK,QAAnB,EAA6B;AACzC;AACA,UAAM;AAAEC,MAAAA,GAAG,GAAG;AAAEC,QAAAA;AAAF;AAAR,QAA8BP,gBAApC;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ,EAHyC,CAIzC;AACD;;AAED,QAAMZ,KAAN,GAAc;AACZ,UAAM;AAAEe,MAAAA,aAAF;AAAiBZ,MAAAA;AAAjB,QAAgC,KAAKC,KAA3C,CADY,CAEZ;AACA;;AACA,QAAIW,aAAa,CAACC,MAAd,KAAyB,CAA7B,EAAgC;AAC9BD,MAAAA,aAAa,CAACE,GAAd,CAAkB,MAAOC,OAAP,IAAmB;AACnC,cAAM;AAAEhB,UAAAA,QAAF;AAAYQ,UAAAA;AAAZ,YAAyBQ,OAA/B;AACA,cAAMb,gBAAgB,GAAG,MAAM,KAAKJ,oBAAL,CAA0BC,QAA1B,CAA/B;AACA,aAAKO,cAAL,CAAoBJ,gBAApB,EAAsCK,QAAtC,EAHmC,CAInC;AACD,OALD;AAMD;AACF;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKhB,KAA3B;AACA,UAAMiB,KAAK,GAAG,CAAd;AACA,UAAMnB,QAAQ,GAAG,KAAjB;AAEA,wBACE;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,qBAAY,aADd;AAEE,MAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,UAASkB,SAAU,EAJvB,CADF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,qBAAY,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,aAAYC,KAAM,EAAlD,CADF,eAEE;AAAG,qBAAY,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEInB,QAFJ,CAFF,CAPF,CAJF,CADF;AAuBD;;AA5DkC;;AA+DrCL,MAAM,CAACyB,SAAP,GAAmB;AACjBF,EAAAA,SAAS,EAAEzB,SAAS,CAAC4B,MAAV,CAAiBC;AADX,CAAnB;;AAIA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCN,EAAAA,SAAS,EAAEM,KAAK,CAACC,IAAN,CAAWC,KADY;AAElCb,EAAAA,aAAa,EAAEW,KAAK,CAACG,MAAN,CAAaC,QAFM;AAGlC3B,EAAAA,UAAU,EAAEuB,KAAK,CAACG,MAAN,CAAaE;AAHS,CAAZ,CAAxB;;AAMA,eAAenC,OAAO,CAAC6B,eAAD,EAAkB,IAAlB,CAAP,CAA+B5B,MAA/B,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../assets/css/header.css';\n\nclass Header extends React.Component {\n  componentDidUpdate() {\n    this.teste();\n  }\n\n  findExchangeCurrency(currency) {\n    const { currencies } = this.props;\n    const exchangeCurrency = currencies.find((coin) => coin.code === currency);\n    return exchangeCurrency;\n  }\n\n  exchangeToReal(exchangeCurrency, spendigs) {\n    // console.log(exchangeCurrency, spendigs);\n    const { ask = { exchangeIndex } } = exchangeCurrency;\n    console.log(exchangeIndex);\n    // const conversion = spendigs \n  }\n\n  async teste() {\n    const { totalExpenses, currencies } = this.props;\n    // console.log(totalExpenses);\n    // const exchangeCurrency = this.findExchangeCurrency()\n    if (totalExpenses.length !== 0) {\n      totalExpenses.map(async (expense) => {\n        const { currency, spendigs } = expense;\n        const exchangeCurrency = await this.findExchangeCurrency(currency);\n        this.exchangeToReal(exchangeCurrency, spendigs);\n        // console.log(expense);\n      });\n    }\n  }\n\n  render() {\n    const { userEmail } = this.props;\n    const total = 0;\n    const currency = 'BRL';\n\n    return (\n      <header className=\"header-section\">\n        <div className=\"page-title\">\n          <h1> TrybeWallet </h1>\n        </div>\n        <div className=\"user-infos\">\n          <p\n            data-testid=\"email-field\"\n            className=\"email-field\"\n          >\n            {`Email: ${userEmail}`}\n          </p>\n          <div className=\"spending-field\">\n            <p data-testid=\"total-field\">{ `Despesas: ${total}` }</p>\n            <p data-testid=\"header-currency-field\">\n              {\n                currency\n              }\n            </p>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  totalExpenses: state.wallet.expenses,\n  currencies: state.wallet.allCurr,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n"]},"metadata":{},"sourceType":"module"}