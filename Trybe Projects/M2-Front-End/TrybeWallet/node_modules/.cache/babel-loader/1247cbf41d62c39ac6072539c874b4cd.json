{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/Header.js\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../assets/css/header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpenses: 0\n    };\n  }\n\n  componentDidUpdate() {\n    this.teste();\n  }\n\n  async getSpendigsConverted() {\n    const {\n      totalExpenses\n    } = this.props;\n\n    if (totalExpenses.length !== 0) {\n      totalExpenses.map(async expense => {\n        const {\n          currency,\n          spendigs\n        } = expense;\n        const exchangeCurrency = await this.findExchangeCurrency(currency);\n        const exchanged = this.exchangeToReal(exchangeCurrency, spendigs);\n        return exchanged;\n      });\n    }\n  }\n\n  async teste() {\n    const value = await this.getSpendigsConverted();\n    console.log(value);\n  }\n\n  exchangeToReal(exchangeCurrency, spendigs) {\n    const {\n      ask: exchangeIndex\n    } = exchangeCurrency;\n    const conversion = spendigs * exchangeIndex;\n    return conversion;\n  }\n\n  findExchangeCurrency(currency) {\n    const {\n      currencies\n    } = this.props;\n    const exchangeCurrency = currencies.find(coin => coin.code === currency);\n    return exchangeCurrency;\n  }\n\n  render() {\n    const {\n      userEmail\n    } = this.props;\n    const {\n      totalExpenses\n    } = this.state;\n    const currency = 'BRL';\n    return /*#__PURE__*/React.createElement(\"header\", {\n      className: \"header-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, \" TrybeWallet \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-infos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"email-field\",\n      className: \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, `Email: ${userEmail}`), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spending-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, `Despesas: ${totalExpenses}`), /*#__PURE__*/React.createElement(\"p\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, currency))));\n  }\n\n}\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  userEmail: state.user.email,\n  totalExpenses: state.wallet.expenses,\n  currencies: state.wallet.allCurr\n});\n\nexport default connect(mapStateToProps, null)(Header);","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/Header.js"],"names":["React","PropTypes","connect","Header","Component","constructor","state","totalExpenses","componentDidUpdate","teste","getSpendigsConverted","props","length","map","expense","currency","spendigs","exchangeCurrency","findExchangeCurrency","exchanged","exchangeToReal","value","console","log","ask","exchangeIndex","conversion","currencies","find","coin","code","render","userEmail","propTypes","string","isRequired","mapStateToProps","user","email","wallet","expenses","allCurr"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport '../assets/css/header.css';\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      totalExpenses: 0,\n    };\n  }\n\n  componentDidUpdate() {\n    this.teste();\n  }\n\n  async getSpendigsConverted() {\n    const { totalExpenses } = this.props;\n\n    if (totalExpenses.length !== 0) {\n      totalExpenses.map(async (expense) => {\n        const { currency, spendigs } = expense;\n        const exchangeCurrency = await this.findExchangeCurrency(currency);\n        const exchanged = this.exchangeToReal(exchangeCurrency, spendigs);\n        return exchanged;\n      });\n    }\n  }\n\n  async teste() {\n    const value = await this.getSpendigsConverted();\n    console.log(value);\n  }\n\n  exchangeToReal(exchangeCurrency, spendigs) {\n    const { ask: exchangeIndex } = exchangeCurrency;\n    const conversion = spendigs * exchangeIndex;\n    return conversion;\n  }\n\n  findExchangeCurrency(currency) {\n    const { currencies } = this.props;\n    const exchangeCurrency = currencies.find((coin) => coin.code === currency);\n    return exchangeCurrency;\n  }\n\n  render() {\n    const { userEmail } = this.props;\n    const { totalExpenses } = this.state;\n    const currency = 'BRL';\n\n    return (\n      <header className=\"header-section\">\n        <div className=\"page-title\">\n          <h1> TrybeWallet </h1>\n        </div>\n        <div className=\"user-infos\">\n          <p\n            data-testid=\"email-field\"\n            className=\"email-field\"\n          >\n            {`Email: ${userEmail}`}\n          </p>\n          <div className=\"spending-field\">\n            <p data-testid=\"total-field\">{ `Despesas: ${totalExpenses}` }</p>\n            <p data-testid=\"header-currency-field\">\n              {\n                currency\n              }\n            </p>\n          </div>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  totalExpenses: state.wallet.expenses,\n  currencies: state.wallet.allCurr,\n});\n\nexport default connect(mapStateToProps, null)(Header);\n"]},"metadata":{},"sourceType":"module"}