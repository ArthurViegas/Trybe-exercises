{"ast":null,"code":"import { ADD_SUM_EXPENSIES, LOAD_CURRENCIES, SAVE_NEW_EXPENSE } from '../actions'; // Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\n\nconst INITIAL_STATE = {\n  expenses: [],\n  expensesSum: 0\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SAVE_NEW_EXPENSE:\n      return { ...state,\n        expenses: [...state.expenses, action.payload]\n      };\n\n    case LOAD_CURRENCIES:\n      return { ...state,\n        exchangeRates: action.payload\n      };\n\n    case ADD_SUM_EXPENSIES:\n      return { ...state,\n        expensesSum: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default walletReducer;","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/reducers/wallet.js"],"names":["ADD_SUM_EXPENSIES","LOAD_CURRENCIES","SAVE_NEW_EXPENSE","INITIAL_STATE","expenses","expensesSum","walletReducer","state","action","type","payload","exchangeRates"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,eAA5B,EAA6CC,gBAA7C,QAAqE,YAArE,C,CACA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,WAAW,EAAE;AAFO,CAAtB;;AAKA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKP,gBAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACE,OAA3B;AAFL,OAAP;;AAIF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELI,QAAAA,aAAa,EAAEH,MAAM,CAACE;AAFjB,OAAP;;AAIF,SAAKV,iBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELF,QAAAA,WAAW,EAAEG,MAAM,CAACE;AAFf,OAAP;;AAIF;AACE,aAAOH,KAAP;AAjBF;AAmBD,CApBD;;AAsBA,eAAeD,aAAf","sourcesContent":["import { ADD_SUM_EXPENSIES, LOAD_CURRENCIES, SAVE_NEW_EXPENSE } from '../actions';\n// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nconst INITIAL_STATE = {\n  expenses: [],\n  expensesSum: 0,\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SAVE_NEW_EXPENSE:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case LOAD_CURRENCIES:\n    return {\n      ...state,\n      exchangeRates: action.payload,\n    };\n  case ADD_SUM_EXPENSIES:\n    return {\n      ...state,\n      expensesSum: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n"]},"metadata":{},"sourceType":"module"}