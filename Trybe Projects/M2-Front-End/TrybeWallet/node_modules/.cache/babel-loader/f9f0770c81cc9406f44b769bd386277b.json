{"ast":null,"code":"var _jsxFileName = \"/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/SpendingsTable.js\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react'; // import PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport TableHeader from './TableHeader'; // import '../assets/css/header.css';\n\nclass SpendigsTable extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //   };\n  // }\n  // Fonte: Consultei o repositório do Davi Soares, utilizei de sua lógica e reaproveitei suas funções de conversão do valor;\n  // formatMonetaryValue(strOrNumber) {\n  //   return `${Number(strOrNumber).toFixed(2)}`;\n  // }\n  // convertToBRL(exchangeRates, currency, value) {\n  //   const findExchangeRate = exchangeRates.find((find) => find.code === currency);\n  //   return (findExchangeRate.ask * value);\n  // }\n  // findCurrency(exchangeRates, currency) {\n  //   const findExchangeRate = exchangeRates.find((find) => find.code === currency);\n  //   const exchangeRate = this.formatMonetaryValue(findExchangeRate.ask);\n  //   return exchangeRate;\n  // }\n  // rederExpenseRow(expense) {\n  //   const { id, description, tag, method, value, currency, exchangeRates } = expense;\n  //   console.log(description);\n  //   return (\n  //     <tr key={ id }>\n  //       <td>{ description }</td>\n  //       <td>{ tag }</td>\n  //       <td>{ method }</td>\n  //       <td>{ value }</td>\n  //       <td>{ currency }</td>\n  //       <td>{ this.findCurrency(exchangeRates, currency) }</td>\n  //       <td>\n  //         { this.formatMonetaryValue(\n  //           this.convertToBRL(exchangeRates, currency, value),\n  //         ) }\n  //       </td>\n  //     </tr>\n  //   );\n  // }\n  render() {\n    // const { allExpenses } = this.props;\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n} // SpendigsTable.propTypes = {\n//   userEmail: PropTypes.string.isRequired,\n//   totalExpenses: PropTypes.func.isRequired,\n// };\n\n\nconst mapStateToProps = state => ({\n  allExpenses: state.wallet.expenses // totalExpenses: state.wallet.expensesSum,\n\n});\n\nexport default connect(mapStateToProps, null)(SpendigsTable);","map":{"version":3,"sources":["/home/arthur/Documents/trybe-projects/02-front-end/b15-trybeWallet/sd-015-b-project-trybewallet/src/components/SpendingsTable.js"],"names":["React","connect","TableHeader","SpendigsTable","Component","render","mapStateToProps","state","allExpenses","wallet","expenses"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAC1C;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAQD;;AAtDyC,C,CAyD5C;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,WAAW,EAAED,KAAK,CAACE,MAAN,CAAaC,QADQ,CAElC;;AAFkC,CAAZ,CAAxB;;AAKA,eAAeT,OAAO,CAACK,eAAD,EAAkB,IAAlB,CAAP,CAA+BH,aAA/B,CAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\n// import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TableHeader from './TableHeader';\n// import '../assets/css/header.css';\n\nclass SpendigsTable extends React.Component {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //   };\n  // }\n  // Fonte: Consultei o repositório do Davi Soares, utilizei de sua lógica e reaproveitei suas funções de conversão do valor;\n\n  // formatMonetaryValue(strOrNumber) {\n  //   return `${Number(strOrNumber).toFixed(2)}`;\n  // }\n\n  // convertToBRL(exchangeRates, currency, value) {\n  //   const findExchangeRate = exchangeRates.find((find) => find.code === currency);\n\n  //   return (findExchangeRate.ask * value);\n  // }\n\n  // findCurrency(exchangeRates, currency) {\n  //   const findExchangeRate = exchangeRates.find((find) => find.code === currency);\n  //   const exchangeRate = this.formatMonetaryValue(findExchangeRate.ask);\n  //   return exchangeRate;\n  // }\n\n  // rederExpenseRow(expense) {\n  //   const { id, description, tag, method, value, currency, exchangeRates } = expense;\n  //   console.log(description);\n  //   return (\n  //     <tr key={ id }>\n  //       <td>{ description }</td>\n  //       <td>{ tag }</td>\n  //       <td>{ method }</td>\n  //       <td>{ value }</td>\n  //       <td>{ currency }</td>\n  //       <td>{ this.findCurrency(exchangeRates, currency) }</td>\n  //       <td>\n  //         { this.formatMonetaryValue(\n  //           this.convertToBRL(exchangeRates, currency, value),\n  //         ) }\n  //       </td>\n  //     </tr>\n  //   );\n  // }\n\n  render() {\n    // const { allExpenses } = this.props;\n    return (\n      <table>\n        <TableHeader />\n        <tbody>\n          {/* { allExpenses.map((expense) => this.rederExpenseRow(expense)) } */}\n        </tbody>\n      </table>\n    );\n  }\n}\n\n// SpendigsTable.propTypes = {\n//   userEmail: PropTypes.string.isRequired,\n//   totalExpenses: PropTypes.func.isRequired,\n// };\n\nconst mapStateToProps = (state) => ({\n  allExpenses: state.wallet.expenses,\n  // totalExpenses: state.wallet.expensesSum,\n});\n\nexport default connect(mapStateToProps, null)(SpendigsTable);\n"]},"metadata":{},"sourceType":"module"}